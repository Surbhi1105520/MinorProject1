{"name": "test_login_rejects_invalid_credentials_shows_error[surbhi1105520@gmail.com-wrong_password-wrong_password]", "status": "broken", "statusDetails": {"message": "ValueError: too many values to unpack (expected 2)", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8133c5ac45af1293b6dcf8aba3bb3a97\")>, email = 'surbhi1105520@gmail.com'\npassword = 'wrong_password', case = 'wrong_password'\n\n    @pytest.mark.negative\n    @pytest.mark.parametrize(\n        \"email,password,case\",\n        [\n            (\"bad_email\", VALID_PASS, \"invalid_email_format\"),\n            (USER, \"wrong_password\", \"wrong_password\"),\n            (\"\", VALID_PASS, \"empty_email\"),\n            (USER, \"\", \"empty_password\"),\n            (\"   \", \"   \", \"whitespace_both\"),\n            (\"foo@\", VALID_PASS, \"email_missing_domain\"),\n            (\"@bar.com\", VALID_PASS, \"email_missing_local\"),\n        ],\n        ids=lambda x: x if isinstance(x, str) else None,\n    )\n    def test_login_rejects_invalid_credentials_shows_error(driver, email, password, case):\n        # Skip if reCAPTCHA is visible (site will block automation, making this flaky)\n        if recaptcha_present(driver):\n            pytest.skip(\"reCAPTCHA visible — skipping automated negative login UI test.\")\n    \n        home = GuviHomePage(driver)\n        home.open()\n        assert home.is_url_valid(), \"❌ Not on GUVI homepage\"\n    \n        login = LoginPage(driver)\n        login.open()\n    \n        # Attempt login with invalid creds\n        login.login(email, password, expect_success=False)\n    \n        # Verify NOT logged in\n        wait = WebDriverWait(driver, 10)\n        head = DashboardPage(driver, wait)\n>       assert not head.is_logged_in(), \"❌ Avatar should NOT be visible after failed login\"\n\ntest\\test_7invalid.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\dashboard_page.py:131: in is_logged_in\n    return self._visible_any(self.AVATAR_ALTS, 5)\npages\\dashboard_page.py:113: in _visible_any\n    return self._first_visible(locs, timeout) is not None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.dashboard_page.DashboardPage object at 0x000001CDAFD70BB0>, locs = ('css selector', \"img.gravatar[alt='Profile']\"), timeout = 5\n\n    def _first_visible(self, locs, timeout: int = 5):\n        end = time.time() + timeout\n        while time.time() < end:\n>           for by, sel in locs:\nE           ValueError: too many values to unpack (expected 2)\n\npages\\dashboard_page.py:100: ValueError"}, "parameters": [{"name": "email", "value": "'surbhi1105520@gmail.com'"}, {"name": "password", "value": "'wrong_password'"}, {"name": "case", "value": "'wrong_password'"}], "start": 1757240503789, "stop": 1757240517610, "uuid": "5d0cf5fc-e0ff-4bcc-9c71-38cc95a97729", "historyId": "4373618de38102372531129b9a408ca4", "testCaseId": "e2ca67e0de31fbd8efe185ab8fe06d04", "fullName": "test.test_7invalid#test_login_rejects_invalid_credentials_shows_error", "labels": [{"name": "tag", "value": "negative"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_7invalid"}, {"name": "host", "value": "aq"}, {"name": "thread", "value": "20356-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_7invalid"}], "titlePath": ["test", "test_7invalid.py"]}